#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.6 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 67 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 100 149 237 0 0 0 -1 -1 0
42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 50 205 50 0 0 0 -1 -1 0 1
#"\0"
0 75 12 #"Courier New\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 46 214 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 100 149 237
0 0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 50 205 50 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 191 255 0
0 0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 191 255 0
0 0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 152 251 152
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1
          0 1117 0 29 3 12 #"#lang racket"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 3 #"fsm"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 24 #"test-engine/racket-tests"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 15 #"; Exercise 4.17"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 2 #"aa"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"make-tm"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"S"
0 0 25 3 1 #" "
0 0 14 3 1 #"A"
0 0 25 3 1 #" "
0 0 14 3 1 #"Y"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 22 3 1 #"`"
0 0 25 3 1 #"("
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 2 #"LM"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 22 3 1 #"`"
0 0 25 3 3 #"((("
0 0 14 3 1 #"S"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 3 #") ("
0 0 14 3 1 #"A"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 5 #"RIGHT"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"     (("
0 0 14 3 1 #"S"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 3 #") ("
0 0 14 3 1 #"S"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 5 #"RIGHT"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"     (("
0 0 14 3 1 #"S"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 5 #"BLANK"
0 0 25 3 3 #") ("
0 0 14 3 1 #"S"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 5 #"RIGHT"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"     (("
0 0 14 3 1 #"A"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 3 #") ("
0 0 14 3 1 #"Y"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"     (("
0 0 14 3 1 #"A"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 3 #") ("
0 0 14 3 1 #"S"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 5 #"RIGHT"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"     (("
0 0 14 3 1 #"A"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 5 #"BLANK"
0 0 25 3 3 #") ("
0 0 14 3 1 #"S"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 5 #"RIGHT"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 22 3 1 #"'"
0 0 14 3 1 #"S"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"Y"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 22 3 1 #"'"
0 0 14 3 1 #"Y"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"test1-aa"
0 0 25 3 2 #" ("
0 0 14 3 18 #"sm-showtransitions"
0 0 25 3 1 #" "
0 0 14 3 2 #"aa"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"("
0 0 29 3 1 #","
0 0 14 3 2 #"LM"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"test2-aa"
0 0 25 3 2 #" ("
0 0 14 3 18 #"sm-showtransitions"
0 0 25 3 1 #" "
0 0 14 3 2 #"aa"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"("
0 0 29 3 1 #","
0 0 14 3 2 #"LM"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"test3-aa"
0 0 25 3 2 #" ("
0 0 14 3 18 #"sm-showtransitions"
0 0 25 3 1 #" "
0 0 14 3 2 #"aa"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"("
0 0 29 3 1 #","
0 0 14 3 2 #"LM"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"test4-aa"
0 0 25 3 2 #" ("
0 0 14 3 18 #"sm-showtransitions"
0 0 25 3 1 #" "
0 0 14 3 2 #"aa"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"("
0 0 29 3 1 #","
0 0 14 3 2 #"LM"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 5 #"BLANK"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"test5-aa"
0 0 25 3 2 #" ("
0 0 14 3 18 #"sm-showtransitions"
0 0 25 3 1 #" "
0 0 14 3 2 #"aa"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"("
0 0 29 3 1 #","
0 0 14 3 2 #"LM"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 5 #"BLANK"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 4 #"last"
0 0 25 3 1 #" "
0 0 14 3 8 #"test1-aa"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"Y"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 2 #" ("
0 0 14 3 1 #"@"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 4 #"last"
0 0 25 3 1 #" "
0 0 14 3 8 #"test2-aa"
0 0 25 3 1 #")"
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"Y"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 2 #" ("
0 0 14 3 1 #"@"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 4 #"last"
0 0 25 3 1 #" "
0 0 14 3 8 #"test3-aa"
0 0 25 3 1 #")"
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"Y"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #" ("
0 0 14 3 1 #"@"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 4 #"last"
0 0 25 3 1 #" "
0 0 14 3 8 #"test4-aa"
0 0 25 3 1 #")"
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"Y"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 2 #" ("
0 0 14 3 1 #"@"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 4 #"last"
0 0 25 3 1 #" "
0 0 14 3 8 #"test5-aa"
0 0 25 3 1 #")"
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"Y"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 2 #" ("
0 0 14 3 1 #"@"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"S-INV"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"A-INV"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 3 #"eq?"
0 0 25 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #")) "
0 0 22 3 1 #"'"
0 0 14 3 1 #"a"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"Y-INV"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 25 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 1 #"a"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 3 #"eq?"
0 0 25 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #")) "
0 0 22 3 1 #"'"
0 0 14 3 1 #"a"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 9         451 22           0 0           0 74 0 14 3 5 #"Proof"
0 0 25 29 1 #"\n"
0 0 17 3 42 #";S-INV: Takes as input a tape and an index"
0 0 25 29 1 #"\n"
0 0 17 3 18 #";       Returns #t"
0 0 25 29 1 #"\n"
0 0 17 3 19 #";       S-INV holds"
0 0 25 29 1 #"\n"
0 0 17 3 19 #";((S b) (S ,RIGHT))"
0 0 25 29 1 #"\n"
0 0 17 3 30 #";       A b is read on state S"
0 0 25 29 1 #"\n"
0 0 17 3 58
#";       Does not adhere to the rules to be sent to state A"
0 0 25 29 1 #"\n"
0 0 17 3 64
#";       Remains in state S pushed to the right to check for an a"
0 0 25 29 1 #"\n"
0 0 17 3 17 #";       INV holds"
0 0 25 29 1 #"\n"
0 0 17 3 24 #";((S ,BLANK) (S ,RIGHT))"
0 0 25 29 1 #"\n"
0 0 17 3 32 #";       Blank is read on state S"
0 0 25 29 1 #"\n"
0 0 17 3 64
#";       Remains in state S pushed to the right to check for an a"
0 0 25 29 1 #"\n"
0 0 17 3 17 #";       INV holds"
0 0 25 29 1 #"\n"
0 0 17 3 18 #";((A b) (S ,RIGHT)"
0 0 25 29 1 #"\n"
0 0 17 3 30 #";       A b is read on state A"
0 0 25 29 1 #"\n"
0 0 17 3 78
(4
 #";       Moves to the beginning (state S) because two as were not rea"
 #"d in a row"
) 0 0 25 29 1 #"\n"
0 0 17 3 17 #";       INV holds"
0 0 25 29 1 #"\n"
0 0 17 3 24 #";((A ,BLANK) (S ,BLANK))"
0 0 25 29 1 #"\n"
0 0 17 3 32 #";       Blank is read on state A"
0 0 25 29 1 #"\n"
0 0 17 3 65
#";       Returned to state S pushed to the right to check for an a"
0 0 25 29 1 #"\n"
0 0 17 3 17 #";       INV holds"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 51 #";A-INV: Reaches state A if there is an a at state S"
0 0 25 29 1 #"\n"
0 0 17 3 42 #";       Takes as input a tape and an index"
0 0 25 29 1 #"\n"
0 0 17 3 36 #";       Checks if last index is an a"
0 0 25 29 1 #"\n"
0 0 17 3 19 #";((S a) (A ,RIGHT))"
0 0 25 29 1 #"\n"
0 0 17 3 31 #";       An a is read in state S"
0 0 25 29 1 #"\n"
0 0 17 3 47 #";       Pushes to the right and reaches state A"
0 0 25 29 1 #"\n"
0 0 17 3 85
(5
 #";       Previous index must have been an a for state A to be reached"
 #", invariant holds"
) 0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 42 #";Y-INV: Takes as input a tape and an index"
0 0 25 29 1 #"\n"
0 0 17 3 39 #";       Checks if current index is an a"
0 0 25 29 1 #"\n"
0 0 17 3 36 #";       Checks if last index in an a"
0 0 25 29 1 #"\n"
0 0 17 3 14 #";((A a) (Y a))"
0 0 25 29 1 #"\n"
0 0 17 3 31 #";       An a is read on state A"
0 0 25 29 1 #"\n"
0 0 17 3 95
(6
 #";       Two as have been read consecutively since an a must be read "
 #"in state S to reach state A"
) 0 0 25 29 1 #"\n"
0 0 17 3 64
#";       The a read is pushed to state Y to accept the given word"
0 0 25 29 1 #"\n"
0           0 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 16 #"; Exercise 4.18c"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 1 #"R"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"make-tm"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"S"
0 0 25 3 1 #" "
0 0 14 3 1 #"H"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 22 3 1 #"`"
0 0 25 3 3 #"((("
0 0 14 3 1 #"S"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 2 #"LM"
0 0 25 3 3 #") ("
0 0 14 3 1 #"S"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 5 #"RIGHT"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"     (("
0 0 14 3 1 #"S"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 3 #") ("
0 0 14 3 1 #"H"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 5 #"RIGHT"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"     (("
0 0 14 3 1 #"S"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 3 #") ("
0 0 14 3 1 #"H"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 5 #"RIGHT"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"     (("
0 0 14 3 1 #"S"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 5 #"BLANK"
0 0 25 3 3 #") ("
0 0 14 3 1 #"H"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 5 #"RIGHT"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 22 3 1 #"'"
0 0 14 3 1 #"S"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"H"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 20 #";(define (S-INV t i)"
0 0 25 29 1 #"\n"
0 0 17 3 6 #";  #t)"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"H-INV"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"or"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 2 #">="
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 3 #"eq?"
0 0 25 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 3 #")) "
0 0 14 3 5 #"BLANK"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 3 #"eq?"
0 0 25 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 3 #")) "
0 0 22 3 1 #"'"
0 0 14 3 1 #"a"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 3 #"eq?"
0 0 25 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 3 #")) "
0 0 22 3 1 #"'"
0 0 14 3 1 #"b"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 9         991 22           0 0           0 164 0 17 3 7 #";S-INV:"
0 0 25 29 1 #"\n"
0 0 17 3 3 #";(("
0 0 17 3 1 #"S"
0 0 17 3 1 #" "
0 0 17 3 1 #","
0 0 17 3 2 #"LM"
0 0 17 3 3 #") ("
0 0 17 3 1 #"S"
0 0 17 3 9 #" ,RIGHT))"
0 0 25 29 1 #"\n"
0 0 17 3 8 #";     LM"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 4 #"read"
0 0 17 3 1 #" "
0 0 17 3 2 #"on"
0 0 17 3 8 #" state S"
0 0 25 29 1 #"\n"
0 0 17 3 14 #";     Position"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 4 #"tape"
0 0 17 3 1 #" "
0 0 17 3 4 #"must"
0 0 17 3 1 #" "
0 0 17 3 2 #"be"
0 0 17 3 1 #" "
0 0 17 3 7 #"greater"
0 0 17 3 1 #" "
0 0 17 3 4 #"than"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 9 #"therefore"
0 0 17 3 1 #" "
0 0 17 3 4 #"tape"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 6 #"pushed"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 5 #"right"
0 0 17 3 1 #" "
0 0 17 3 3 #"and"
0 0 17 3 1 #" "
0 0 17 3 7 #"remains"
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 8 #" state S"
0 0 25 29 1 #"\n"
0 0 17 3 15 #";     INV holds"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 7 #";H-INV:"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 3 #";(("
0 0 17 3 3 #"S a"
0 0 17 3 3 #") ("
0 0 17 3 1 #"H"
0 0 17 3 9 #" ,RIGHT))"
0 0 25 29 1 #"\n"
0 0 17 3 8 #";     An"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 4 #"read"
0 0 17 3 1 #" "
0 0 17 3 2 #"on"
0 0 17 3 8 #" state S"
0 0 25 29 1 #"\n"
0 0 17 3 11 #";     Moves"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 5 #"state"
0 0 17 3 1 #" "
0 0 17 3 1 #"H"
0 0 17 3 1 #" "
0 0 17 3 6 #"pushed"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 10 #" the right"
0 0 25 29 1 #"\n"
0 0 17 3 15 #";     INV holds"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 3 #";(("
0 0 17 3 1 #"S"
0 0 17 3 1 #" "
0 0 17 3 1 #"b"
0 0 17 3 3 #") ("
0 0 17 3 1 #"H"
0 0 17 3 9 #" ,RIGHT))"
0 0 25 29 1 #"\n"
0 0 17 3 9 #";     A b"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 4 #"read"
0 0 17 3 1 #" "
0 0 17 3 2 #"on"
0 0 17 3 8 #" state S"
0 0 25 29 1 #"\n"
0 0 17 3 11 #";     Moves"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 5 #"state"
0 0 17 3 1 #" "
0 0 17 3 1 #"H"
0 0 17 3 1 #" "
0 0 17 3 6 #"pushed"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 10 #" the right"
0 0 25 29 1 #"\n"
0 0 17 3 15 #";     INV holds"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 3 #";(("
0 0 17 3 1 #"S"
0 0 17 3 2 #" ,"
0 0 17 3 5 #"BLANK"
0 0 17 3 3 #") ("
0 0 17 3 1 #"H"
0 0 17 3 10 #" ,RIGHT)))"
0 0 25 29 1 #"\n"
0 0 17 3 16 #";     A blank is"
0 0 17 3 1 #" "
0 0 17 3 4 #"read"
0 0 17 3 1 #" "
0 0 17 3 2 #"on"
0 0 17 3 8 #" state S"
0 0 25 29 1 #"\n"
0 0 17 3 12 #";     Moves "
0 0 17 3 2 #"to"
0 0 17 3 6 #" state"
0 0 17 3 1 #" "
0 0 17 3 1 #"H"
0 0 17 3 1 #" "
0 0 17 3 6 #"pushed"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 10 #" the right"
0 0 25 29 1 #"\n"
0 0 17 3 15 #";     INV holds"
0 0 25 29 1 #"\n"
0           0 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 1 #"L"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"make-tm"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"S"
0 0 25 3 1 #" "
0 0 14 3 1 #"H"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 22 3 1 #"`"
0 0 25 3 3 #"((("
0 0 14 3 1 #"S"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 2 #"LM"
0 0 25 3 3 #") ("
0 0 14 3 1 #"S"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 5 #"RIGHT"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"     (("
0 0 14 3 1 #"S"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 3 #") ("
0 0 14 3 1 #"H"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 4 #"LEFT"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"     (("
0 0 14 3 1 #"S"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 3 #") ("
0 0 14 3 1 #"H"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 4 #"LEFT"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"     (("
0 0 14 3 1 #"S"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 5 #"BLANK"
0 0 25 3 3 #") ("
0 0 14 3 1 #"H"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 4 #"LEFT"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 22 3 1 #"'"
0 0 14 3 1 #"S"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"H"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 5 #"S-INV"
0 0 17 3 1 #" "
0 0 17 3 4 #"t i)"
0 0 25 29 1 #"\n"
0 0 17 3 6 #";  #t)"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 5 #"H-INV"
0 0 17 3 1 #" "
0 0 17 3 4 #"t i)"
0 0 25 29 1 #"\n"
0 0 17 3 6 #";  (or"
0 0 25 29 1 #"\n"
0 0 17 3 5 #";   ("
0 0 17 3 2 #">="
0 0 17 3 1 #" "
0 0 17 3 4 #"i 1)"
0 0 25 29 1 #"\n"
0 0 17 3 5 #";   ("
0 0 17 3 3 #"eq?"
0 0 17 3 2 #" ("
0 0 17 3 8 #"list-ref"
0 0 17 3 1 #" "
0 0 17 3 1 #"t"
0 0 17 3 2 #" ("
0 0 17 3 1 #"+"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 10 #"i)) BLANK)"
0 0 25 29 1 #"\n"
0 0 17 3 5 #";   ("
0 0 17 3 3 #"eq?"
0 0 17 3 2 #" ("
0 0 17 3 8 #"list-ref"
0 0 17 3 1 #" "
0 0 17 3 1 #"t"
0 0 17 3 2 #" ("
0 0 17 3 1 #"+"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 6 #")) 'a)"
0 0 25 29 1 #"\n"
0 0 17 3 5 #";   ("
0 0 17 3 3 #"eq?"
0 0 17 3 2 #" ("
0 0 17 3 8 #"list-ref"
0 0 17 3 1 #" "
0 0 17 3 1 #"t"
0 0 17 3 2 #" ("
0 0 17 3 1 #"+"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"i"
0 0 17 3 8 #")) 'b)))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 9         265 22           0 0           0 43 0 17 3 7 #";S-INV:"
0 0 25 29 1 #"\n"
0 0 17 3 21 #";((S ,LM) (S ,RIGHT))"
0 0 25 29 1 #"\n"
0 0 17 3 27 #";     LM is read on state S"
0 0 25 29 1 #"\n"
0 0 17 3 111
(7
 #";     Position of the tape must be greater than 1, therefore tape is"
 #" pushed to the right and remains in state S"
) 0 0 25 29 1 #"\n"
0 0 17 3 15 #";     INV holds"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 7 #";H-INV:"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 18 #";((S a) (H ,LEFT))"
0 0 25 29 1 #"\n"
0 0 17 3 29 #";     An a is read on state S"
0 0 25 29 1 #"\n"
0 0 17 3 41 #";     Moves to state H pushed to the left"
0 0 25 29 1 #"\n"
0 0 17 3 15 #";     INV holds"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 18 #";((S b) (H ,LEFT))"
0 0 25 29 1 #"\n"
0 0 17 3 28 #";     A b is read on state S"
0 0 25 29 1 #"\n"
0 0 17 3 41 #";     Moves to state H pushed to the left"
0 0 25 29 1 #"\n"
0 0 17 3 15 #";     INV holds"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 24 #";((S ,BLANK) (H ,LEFT)))"
0 0 25 29 1 #"\n"
0 0 17 3 32 #";     A blank is read on state S"
0 0 25 29 1 #"\n"
0 0 17 3 41 #";     Moves to state H pushed to the left"
0 0 25 29 1 #"\n"
0 0 17 3 15 #";     INV holds"
0           0 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"HALT"
0 0 25 3 2 #" ("
0 0 14 3 7 #"make-tm"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"S"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                      "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                      "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                      "
0 0 22 3 1 #"'"
0 0 14 3 1 #"S"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                      "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"S"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 2 #"LR"
0 0 25 3 2 #" ("
0 0 14 3 11 #"combine-tms"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 1 #"L"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 6 #"BRANCH"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 4 #"HALT"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 4 #"HALT"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 2 #"LM"
0 0 25 3 1 #" "
0 0 14 3 4 #"HALT"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 5 #"BLANK"
0 0 25 3 1 #" "
0 0 14 3 1 #"R"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 2 #"LM"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 7 #"ctm-run"
0 0 25 3 1 #" "
0 0 14 3 2 #"LR"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"("
0 0 29 3 1 #","
0 0 14 3 2 #"LM"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 5 #"BLANK"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #")"
0 0 22 3 1 #"4"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"H"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #"("
0 0 14 3 1 #"@"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 7 #"ctm-run"
0 0 25 3 1 #" "
0 0 14 3 2 #"LR"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"("
0 0 29 3 1 #","
0 0 14 3 2 #"LM"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 5 #"BLANK"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #")"
0 0 22 3 1 #"3"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"S"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #"("
0 0 14 3 1 #"@"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 7 #"ctm-run"
0 0 25 3 1 #" "
0 0 14 3 2 #"LR"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"("
0 0 29 3 1 #","
0 0 14 3 2 #"LM"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 2 #") "
0 0 22 3 1 #"3"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"S"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #" ("
0 0 14 3 1 #"@"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 7 #"ctm-run"
0 0 25 3 1 #" "
0 0 14 3 2 #"LR"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 1 #"("
0 0 29 3 1 #","
0 0 14 3 2 #"LM"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 2 #") "
0 0 22 3 1 #"5"
0 0 25 3 1 #")"
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"S"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 2 #" ("
0 0 14 3 1 #"@"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 4 #"test"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0           0
