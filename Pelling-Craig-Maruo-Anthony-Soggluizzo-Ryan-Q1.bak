#lang racket
(require fsm)

(define TESTONE
  (make-dfa '(Q0 Q1 Q3)
            '(a b)
            'Q0
            '(Q0 Q1)
            '((Q0 a Q1)
              (Q1 a Q0)
              (Q3 a Q3)
              (Q0 b Q0)
              (Q1 b Q1)
              (Q3 b Q3))))

(define TESTONE-EQ
  (make-dfa '(Q0 Q1)
            '(a b)
            'Q0
            '(Q0 Q1)
            '((Q0 a Q1)
              (Q1 a Q0)
              (Q0 b Q0)
              (Q1 b Q1))))




;remove-nonreachable: dfa -> dfa
;Purpose: to remove the non-reachable states from the given dfa
(define (remove-nonreachable dfa))
  ;INVENTORY

;machine-eq?: dfa dfa -> boolean
;Purpose: to determine if the given machines are equal
 (sm-testequiv? (remove-nonreachable TESTONE) TESTONE-EQ)