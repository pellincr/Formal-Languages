#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.6 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 58 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 100 149 237 0 0 0 -1 -1 0
42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 50 205 50 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 152 251 152 0 0 0
-1 -1           0 1153 0 29 3 12 #"#lang racket"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 3 #"fsm"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 24 #"test-engine/racket-tests"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 18 #";Exercise: 3.3.2 b"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"anbm"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"make-ndpda"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"S"
0 0 25 3 1 #" "
0 0 14 3 1 #"M"
0 0 25 3 1 #" "
0 0 14 3 1 #"F"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"a"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 22 3 1 #"'"
0 0 14 3 1 #"S"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"F"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 22 3 1 #"`"
0 0 25 3 3 #"((("
0 0 14 3 1 #"S"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 3 #"EMP"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 3 #"EMP"
0 0 25 3 3 #") ("
0 0 14 3 1 #"M"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 3 #"EMP"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"     (("
0 0 14 3 1 #"M"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 3 #"EMP"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 3 #"EMP"
0 0 25 3 3 #") ("
0 0 14 3 1 #"F"
0 0 29 3 1 #","
0 0 25 3 1 #" "
0 0 14 3 3 #"EMP"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"     (("
0 0 14 3 1 #"M"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 3 #"EMP"
0 0 25 3 3 #") ("
0 0 14 3 1 #"M"
0 0 25 3 1 #"("
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"     (("
0 0 14 3 1 #"M"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 3 #"EMP"
0 0 25 3 3 #") ("
0 0 14 3 1 #"M"
0 0 25 3 1 #"("
0 0 14 3 1 #"a"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"     (("
0 0 14 3 1 #"F"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 2 #" ("
0 0 14 3 1 #"a"
0 0 25 3 4 #")) ("
0 0 14 3 1 #"F"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 3 #"EMP"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"     )))"
0 0 25 29 1 #"\n"
0 0 17 3 33 #";The a's must come before the b's"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 8 #"sm-apply"
0 0 25 3 1 #" "
0 0 14 3 4 #"anbm"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 4 #"()) "
0 0 22 3 1 #"'"
0 0 14 3 6 #"accept"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 8 #"sm-apply"
0 0 25 3 1 #" "
0 0 14 3 4 #"anbm"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"a"
0 0 25 3 3 #")) "
0 0 22 3 1 #"'"
0 0 14 3 6 #"reject"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 8 #"sm-apply"
0 0 25 3 1 #" "
0 0 14 3 4 #"anbm"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 3 #")) "
0 0 22 3 1 #"'"
0 0 14 3 6 #"accept"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 8 #"sm-apply"
0 0 25 3 1 #" "
0 0 14 3 4 #"anbm"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 3 #")) "
0 0 22 3 1 #"'"
0 0 14 3 6 #"reject"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 8 #"sm-apply"
0 0 25 3 1 #" "
0 0 14 3 4 #"anbm"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 3 #")) "
0 0 22 3 1 #"'"
0 0 14 3 6 #"accept"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 8 #"sm-apply"
0 0 25 3 1 #" "
0 0 14 3 4 #"anbm"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 3 #")) "
0 0 22 3 1 #"'"
0 0 14 3 6 #"reject"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 6 #";S-INV"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"S-INV"
0 0 25 3 1 #" "
0 0 14 3 2 #"ci"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 2 #"ci"
0 0 25 3 3 #") ("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 17 3 6 #";M-INV"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"M-INV"
0 0 25 3 1 #" "
0 0 14 3 2 #"ci"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 2 #">="
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 2 #"ci"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 6 #"andmap"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 4 #"eqv?"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"a"
0 0 25 3 3 #")) "
0 0 14 3 2 #"ci"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 17 3 6 #";F-INV"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"F-INV"
0 0 25 3 1 #" "
0 0 14 3 2 #"ci"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 2 #">="
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"k"
0 0 25 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 25 3 1 #" "
0 0 14 3 1 #"k"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"b"
0 0 25 3 3 #")) "
0 0 14 3 2 #"ci"
0 0 25 3 3 #"))("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"k"
0 0 25 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 25 3 1 #" "
0 0 14 3 1 #"k"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"a"
0 0 25 3 3 #")) "
0 0 14 3 2 #"ci"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 2 #"<="
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"k"
0 0 25 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 25 3 1 #" "
0 0 14 3 1 #"k"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"b"
0 0 25 3 3 #")) "
0 0 14 3 2 #"ci"
0 0 25 3 3 #"))("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"k"
0 0 25 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 25 3 1 #" "
0 0 14 3 1 #"k"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"a"
0 0 25 3 3 #")) "
0 0 14 3 2 #"ci"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 6 #";PROOF"
0 0 25 29 1 #"\n"
0 9        6184 22           0 0           0 688 0 17 3 7 #";Prove:"
0 0 17 3 1 #" "
0 0 17 3 4 #"INVs"
0 0 17 3 1 #" "
0 0 17 3 4 #"hold"
0 0 17 3 1 #" "
0 0 17 3 2 #"on"
0 0 17 3 1 #" "
0 0 17 3 1 #"t"
0 0 17 3 1 #" "
0 0 17 3 1 #"="
0 0 17 3 17 #" |consumed input|"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 5 #";Base"
0 0 17 3 1 #" "
0 0 17 3 5 #"Case:"
0 0 17 3 4 #" t=0"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 0 17 3 2 #"Ci"
0 0 17 3 1 #" "
0 0 17 3 1 #"="
0 0 17 3 3 #" \316\265"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 0 17 3 7 #"Machine"
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 1 #" "
0 0 17 3 1 #"S"
0 0 17 3 1 #" "
0 0 17 3 2 #"or"
0 0 17 3 2 #" M"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 0 17 3 6 #"S-INV:"
0 0 17 3 1 #" "
0 0 17 3 2 #"ci"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 5 #"empty"
0 0 17 3 1 #" "
0 0 17 3 2 #"so"
0 0 17 3 1 #" "
0 0 17 3 7 #"nothing"
0 0 17 3 1 #" "
0 0 17 3 3 #"can"
0 0 17 3 1 #" "
0 0 17 3 2 #"be"
0 0 17 3 1 #" "
0 0 17 3 6 #"pushed"
0 0 17 3 1 #" "
0 0 17 3 4 #"onto"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 5 #"stack"
0 0 17 3 1 #" "
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 2 #"ci"
0 0 17 3 1 #" "
0 0 17 3 3 #"and"
0 0 17 3 1 #" "
0 0 17 3 5 #"stack"
0 0 17 3 1 #" "
0 0 17 3 3 #"are"
0 0 17 3 1 #" "
0 0 17 3 4 #"both"
0 0 17 3 1 #" "
0 0 17 3 5 #"empty"
0 0 17 3 1 #" "
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 5 #"S-INV"
0 0 17 3 6 #" holds"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 0 17 3 6 #"M-INV:"
0 0 17 3 1 #" "
0 0 17 3 7 #"Nothing"
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 1 #" "
0 0 17 3 1 #"M"
0 0 17 3 1 #" "
0 0 17 3 7 #"because"
0 0 17 3 1 #" "
0 0 17 3 2 #"ci"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 6 #" empty"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 6 #"Length"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 2 #"ci"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 5 #"equal"
0 0 17 3 1 #" "
0 0 17 3 2 #"or"
0 0 17 3 1 #" "
0 0 17 3 7 #"greater"
0 0 17 3 1 #" "
0 0 17 3 4 #"than"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 3 #"and"
0 0 17 3 1 #" "
0 0 17 3 5 #"there"
0 0 17 3 1 #" "
0 0 17 3 3 #"are"
0 0 17 3 1 #" "
0 0 17 3 2 #"no"
0 0 17 3 1 #" "
0 0 17 3 8 #"elements"
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 1 #" "
0 0 17 3 1 #"M"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 7 #"compare"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 2 #"'a"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 5 #"M-INV"
0 0 17 3 6 #" holds"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 0 17 3 6 #"F-INV:"
0 0 17 3 1 #" "
0 0 17 3 7 #"Nothing"
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 1 #" "
0 0 17 3 1 #"F"
0 0 17 3 1 #" "
0 0 17 3 7 #"because"
0 0 17 3 1 #" "
0 0 17 3 2 #"ci"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 6 #" empty"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 6 #"number"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 2 #"bs"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 2 #">="
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 6 #"number"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 2 #"as"
0 0 17 3 1 #" "
0 0 17 3 7 #"because"
0 0 17 3 1 #" "
0 0 17 3 4 #"both"
0 0 17 3 1 #" "
0 0 17 3 3 #"are"
0 0 17 3 2 #" 0"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 6 #"number"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 2 #"bs"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 2 #"<="
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 5 #"twice"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 6 #"number"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 2 #"as"
0 0 17 3 1 #" "
0 0 17 3 7 #"because"
0 0 17 3 1 #" "
0 0 17 3 4 #"both"
0 0 17 3 1 #" "
0 0 17 3 3 #"are"
0 0 17 3 2 #" 0"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 5 #"F-INV"
0 0 17 3 6 #" holds"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 0 25 29 1 #"\n"
0 0 17 3 10 #";Inductive"
0 0 17 3 6 #" step:"
0 0 25 29 1 #"\n"
0 0 17 3 8 #";Assume:"
0 0 17 3 1 #" "
0 0 17 3 4 #"INVs"
0 0 17 3 1 #" "
0 0 17 3 4 #"hold"
0 0 17 3 1 #" "
0 0 17 3 3 #"for"
0 0 17 3 1 #" "
0 0 17 3 1 #"t"
0 0 17 3 1 #" "
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 1 #"k"
0 0 17 3 31 #"                               "
0 0 17 3 5 #"Show:"
0 0 17 3 1 #" "
0 0 17 3 4 #"INVs"
0 0 17 3 1 #" "
0 0 17 3 4 #"hold"
0 0 17 3 1 #" "
0 0 17 3 3 #"for"
0 0 17 3 1 #" "
0 0 17 3 1 #"t"
0 0 17 3 1 #" "
0 0 17 3 1 #"="
0 0 17 3 4 #" k+1"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 2 #"S:"
0 0 17 3 1 #" "
0 0 17 3 9 #"Consuming"
0 0 17 3 1 #" "
0 0 17 3 4 #"some"
0 0 17 3 1 #" "
0 0 17 3 1 #"x"
0 0 17 3 1 #" "
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 2 #"or"
0 0 17 3 1 #" "
0 0 17 3 1 #"b"
0 0 17 3 1 #" "
0 0 17 3 4 #"mean"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 7 #"machine"
0 0 17 3 1 #" "
0 0 17 3 4 #"must"
0 0 17 3 1 #" "
0 0 17 3 2 #"be"
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 1 #" "
0 0 17 3 1 #"M"
0 0 17 3 1 #" "
0 0 17 3 2 #"or"
0 0 17 3 1 #" "
0 0 17 3 1 #"F"
0 0 17 3 1 #" "
0 0 17 3 3 #"and"
0 0 17 3 1 #" "
0 0 17 3 6 #"cannot"
0 0 17 3 1 #" "
0 0 17 3 2 #"be"
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 2 #" S"
0 0 25 29 1 #"\n"
0 0 17 3 3 #";M:"
0 0 17 3 1 #" "
0 0 17 3 5 #"M-INV"
0 0 17 3 1 #" "
0 0 17 3 5 #"holds"
0 0 17 3 1 #" "
0 0 17 3 6 #"before"
0 0 17 3 1 #" "
0 0 17 3 9 #"consuming"
0 0 17 3 2 #" x"
0 0 25 29 1 #"\n"
0 0 17 3 3 #";(("
0 0 17 3 1 #"S"
0 0 17 3 1 #" "
0 0 17 3 1 #","
0 0 17 3 3 #"EMP"
0 0 17 3 1 #" "
0 0 17 3 1 #","
0 0 17 3 3 #"EMP"
0 0 17 3 3 #") ("
0 0 17 3 1 #"M"
0 0 17 3 1 #" "
0 0 17 3 1 #","
0 0 17 3 3 #"EMP"
0 0 17 3 2 #"))"
0 0 17 3 1 #":"
0 0 17 3 1 #" "
0 0 17 3 3 #"Not"
0 0 17 3 1 #" "
0 0 17 3 4 #"used"
0 0 17 3 1 #" "
0 0 17 3 7 #"because"
0 0 17 3 1 #" "
0 0 17 3 4 #"this"
0 0 17 3 1 #" "
0 0 17 3 4 #"rule"
0 0 17 3 1 #" "
0 0 17 3 3 #"can"
0 0 17 3 1 #" "
0 0 17 3 4 #"only"
0 0 17 3 1 #" "
0 0 17 3 7 #"consume"
0 0 17 3 1 #" "
0 0 17 3 2 #"an"
0 0 17 3 1 #" "
0 0 17 3 5 #"empty"
0 0 17 3 6 #" input"
0 0 25 29 1 #"\n"
0 0 17 3 3 #";(("
0 0 17 3 1 #"M"
0 0 17 3 1 #" "
0 0 17 3 1 #","
0 0 17 3 3 #"EMP"
0 0 17 3 1 #" "
0 0 17 3 1 #","
0 0 17 3 3 #"EMP"
0 0 17 3 3 #") ("
0 0 17 3 1 #"F"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 3 #"EMP"
0 0 17 3 2 #"))"
0 0 17 3 1 #":"
0 0 17 3 1 #" "
0 0 17 3 3 #"Not"
0 0 17 3 1 #" "
0 0 17 3 4 #"used"
0 0 17 3 1 #" "
0 0 17 3 7 #"because"
0 0 17 3 1 #" "
0 0 17 3 4 #"this"
0 0 17 3 1 #" "
0 0 17 3 4 #"rule"
0 0 17 3 1 #" "
0 0 17 3 3 #"can"
0 0 17 3 1 #" "
0 0 17 3 4 #"only"
0 0 17 3 1 #" "
0 0 17 3 7 #"consume"
0 0 17 3 1 #" "
0 0 17 3 2 #"an"
0 0 17 3 1 #" "
0 0 17 3 5 #"empty"
0 0 17 3 1 #" "
0 0 17 3 6 #"input "
0 0 25 29 1 #"\n"
0 0 17 3 3 #";(("
0 0 17 3 1 #"M"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 1 #","
0 0 17 3 3 #"EMP"
0 0 17 3 3 #") ("
0 0 17 3 1 #"M"
0 0 17 3 1 #"("
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 3 #")))"
0 0 17 3 1 #":"
0 0 17 3 1 #" "
0 0 17 3 4 #"adds"
0 0 17 3 1 #" "
0 0 17 3 3 #"two"
0 0 17 3 1 #" "
0 0 17 3 2 #"as"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 6 #" stack"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 6 #"length"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 2 #"ci"
0 0 17 3 1 #" "
0 0 17 3 4 #"must"
0 0 17 3 1 #" "
0 0 17 3 2 #"be"
0 0 17 3 1 #" "
0 0 17 3 2 #">="
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 7 #"because"
0 0 17 3 1 #" "
0 0 17 3 2 #"an"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 3 #"was"
0 0 17 3 5 #" read"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 3 #"all"
0 0 17 3 1 #" "
0 0 17 3 8 #"elements"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 2 #"ci"
0 0 17 3 1 #" "
0 0 17 3 3 #"are"
0 0 17 3 1 #" "
0 0 17 3 10 #"equivalent"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 2 #"'a"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 5 #"M-INV"
0 0 17 3 6 #" holds"
0 0 25 29 1 #"\n"
0 0 17 3 3 #";(("
0 0 17 3 1 #"M"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 1 #","
0 0 17 3 3 #"EMP"
0 0 17 3 3 #") ("
0 0 17 3 1 #"M"
0 0 17 3 1 #"("
0 0 17 3 1 #"a"
0 0 17 3 3 #")))"
0 0 17 3 1 #":"
0 0 17 3 1 #" "
0 0 17 3 4 #"adds"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 6 #" stack"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 6 #"length"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 2 #"ci"
0 0 17 3 1 #" "
0 0 17 3 4 #"must"
0 0 17 3 1 #" "
0 0 17 3 2 #"be"
0 0 17 3 1 #" "
0 0 17 3 2 #">="
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 7 #"because"
0 0 17 3 1 #" "
0 0 17 3 2 #"an"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 3 #"was"
0 0 17 3 5 #" read"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 3 #"all"
0 0 17 3 1 #" "
0 0 17 3 8 #"elements"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 2 #"ci"
0 0 17 3 1 #" "
0 0 17 3 3 #"are"
0 0 17 3 1 #" "
0 0 17 3 10 #"equivalent"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 2 #"'a"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 5 #"M-INV"
0 0 17 3 6 #" holds"
0 0 25 29 1 #"\n"
0 0 17 3 3 #";F:"
0 0 17 3 1 #" "
0 0 17 3 5 #"M-INV"
0 0 17 3 1 #" "
0 0 17 3 5 #"holds"
0 0 17 3 1 #" "
0 0 17 3 6 #"before"
0 0 17 3 1 #" "
0 0 17 3 9 #"consuming"
0 0 17 3 2 #" x"
0 0 25 29 1 #"\n"
0 0 17 3 3 #";(("
0 0 17 3 1 #"F"
0 0 17 3 1 #" "
0 0 17 3 1 #"b"
0 0 17 3 2 #" ("
0 0 17 3 1 #"a"
0 0 17 3 4 #")) ("
0 0 17 3 1 #"F"
0 0 17 3 1 #" "
0 0 17 3 1 #","
0 0 17 3 3 #"EMP"
0 0 17 3 2 #"))"
0 0 17 3 1 #":"
0 0 17 3 1 #" "
0 0 17 3 4 #"pops"
0 0 17 3 1 #" "
0 0 17 3 2 #"an"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 4 #"from"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 5 #"stack"
0 0 17 3 1 #" "
0 0 17 3 2 #"as"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 1 #"b"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 5 #" read"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 6 #"number"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 2 #"bs"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 2 #">="
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 6 #"number"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 3 #" as"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 6 #"number"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 2 #"bs"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 2 #"<="
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 5 #"twice"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 6 #"number"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 3 #" as"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 5 #"F-INV"
0 0 17 3 6 #" holds"
0 0 25 29 1 #"\n"
0 9        2053 22           0 0           0 341 0 17 3 7 #";Prove:"
0 0 17 3 1 #" "
0 0 17 3 1 #"L"
0 0 17 3 1 #"("
0 0 17 3 4 #"anbm"
0 0 17 3 2 #") "
0 0 17 3 2 #"=="
0 0 17 3 79
(4
 #" {w|w has equal or more bs than as, but not more than twice as many "
 #"bs then as}"
) 0 0 25 29 1 #"\n"
0 0 17 3 9 #";Theorem:"
0 0 17 3 1 #" "
0 0 17 3 1 #"w"
0 0 17 3 1 #" "
0 0 17 3 3 #"\342\210\210"
0 0 17 3 1 #" "
0 0 17 3 1 #"L"
0 0 17 3 1 #" "
0 0 17 3 4 #"<-->"
0 0 17 3 1 #" "
0 0 17 3 1 #"w"
0 0 17 3 1 #" "
0 0 17 3 3 #"\342\210\210"
0 0 17 3 1 #" "
0 0 17 3 1 #"L"
0 0 17 3 1 #"("
0 0 17 3 5 #"anbm)"
0 0 25 29 1 #"\n"
0 0 17 3 3 #";<-"
0 0 17 3 1 #" "
0 0 17 3 6 #"Assume"
0 0 17 3 1 #" "
0 0 17 3 1 #"w"
0 0 17 3 1 #" "
0 0 17 3 3 #"\342\210\210"
0 0 17 3 1 #" "
0 0 17 3 1 #"L"
0 0 17 3 1 #"("
0 0 17 3 5 #"anbm)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 5 #"F-INV"
0 0 17 3 1 #" "
0 0 17 3 5 #"holds"
0 0 17 3 1 #" "
0 0 17 3 2 #"by"
0 0 17 3 1 #" "
0 0 17 3 5 #"proof"
0 0 17 3 2 #"  "
0 0 17 3 1 #"t"
0 0 17 3 1 #" "
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 16 #"|consumed input|"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 1 #"w"
0 0 17 3 1 #" "
0 0 17 3 3 #"\342\210\210"
0 0 17 3 2 #" L"
0 0 25 29 1 #"\n"
0 0 17 3 3 #";->"
0 0 17 3 1 #" "
0 0 17 3 6 #"Assume"
0 0 17 3 1 #" "
0 0 17 3 1 #"w"
0 0 17 3 1 #" "
0 0 17 3 3 #"\342\210\210"
0 0 17 3 2 #" L"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 3 #"All"
0 0 17 3 1 #" "
0 0 17 3 2 #"as"
0 0 17 3 1 #" "
0 0 17 3 3 #"are"
0 0 17 3 1 #" "
0 0 17 3 8 #"consumed"
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 1 #" "
0 0 17 3 5 #"state"
0 0 17 3 2 #" M"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 5 #"M-INV"
0 0 17 3 1 #" "
0 0 17 3 5 #"holds"
0 0 17 3 1 #" "
0 0 17 3 3 #"for"
0 0 17 3 1 #" "
0 0 17 3 4 #"each"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 8 #"consumed"
0 0 17 3 1 #" "
0 0 17 3 2 #"by"
0 0 17 3 1 #" "
0 0 17 3 5 #"state"
0 0 17 3 2 #" M"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 3 #"All"
0 0 17 3 1 #" "
0 0 17 3 2 #"bs"
0 0 17 3 1 #" "
0 0 17 3 3 #"are"
0 0 17 3 1 #" "
0 0 17 3 8 #"consumed"
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 1 #" "
0 0 17 3 5 #"state"
0 0 17 3 2 #" F"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 5 #"F-INV"
0 0 17 3 1 #" "
0 0 17 3 5 #"holds"
0 0 17 3 1 #" "
0 0 17 3 2 #"by"
0 0 17 3 1 #" "
0 0 17 3 5 #"proof"
0 0 17 3 2 #"  "
0 0 17 3 1 #"t"
0 0 17 3 1 #" "
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 16 #"|consumed input|"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 1 #"w"
0 0 17 3 1 #" "
0 0 17 3 3 #"\342\210\210"
0 0 17 3 1 #" "
0 0 17 3 1 #"L"
0 0 17 3 1 #"("
0 0 17 3 5 #"anbm)"
0 0 25 29 1 #"\n"
0 0 17 3 9 #";Theorem:"
0 0 17 3 1 #" "
0 0 17 3 1 #"w"
0 0 17 3 1 #" "
0 0 17 3 3 #"\342\210\211"
0 0 17 3 1 #" "
0 0 17 3 1 #"L"
0 0 17 3 1 #" "
0 0 17 3 4 #"<-->"
0 0 17 3 1 #" "
0 0 17 3 1 #"w"
0 0 17 3 1 #" "
0 0 17 3 3 #"\342\210\211"
0 0 17 3 1 #" "
0 0 17 3 1 #"L"
0 0 17 3 1 #"("
0 0 17 3 5 #"anbm)"
0 0 25 29 1 #"\n"
0 0 17 3 3 #";<-"
0 0 17 3 1 #" "
0 0 17 3 6 #"Assume"
0 0 17 3 1 #" "
0 0 17 3 1 #"w"
0 0 17 3 1 #" "
0 0 17 3 3 #"\342\210\211"
0 0 17 3 1 #" "
0 0 17 3 1 #"L"
0 0 17 3 1 #"("
0 0 17 3 5 #"anbm)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 5 #"After"
0 0 17 3 1 #" "
0 0 17 3 9 #"consuming"
0 0 17 3 1 #" "
0 0 17 3 1 #"w"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 5 #"stack"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 6 #"either"
0 0 17 3 1 #" "
0 0 17 3 3 #"not"
0 0 17 3 1 #" "
0 0 17 3 5 #"empty"
0 0 17 3 1 #" "
0 0 17 3 2 #"or"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 7 #"machine"
0 0 17 3 1 #" "
0 0 17 3 5 #"halts"
0 0 17 3 1 #" "
0 0 17 3 7 #"because"
0 0 17 3 1 #" "
0 0 17 3 5 #"there"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 2 #"no"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 4 #" pop"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 0 17 3 2 #"->"
0 0 17 3 2 #"  "
0 0 17 3 1 #"w"
0 0 17 3 1 #" "
0 0 17 3 3 #"\342\210\211"
0 0 17 3 2 #" L"
0 0 25 29 1 #"\n"
0 0 17 3 3 #";->"
0 0 17 3 1 #" "
0 0 17 3 6 #"Assume"
0 0 17 3 1 #" "
0 0 17 3 1 #"w"
0 0 17 3 1 #" "
0 0 17 3 3 #"\342\210\211"
0 0 17 3 2 #" L"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 2 #"as"
0 0 17 3 1 #" "
0 0 17 3 3 #"are"
0 0 17 3 1 #" "
0 0 17 3 8 #"consumes"
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 1 #" "
0 0 17 3 5 #"state"
0 0 17 3 1 #" "
0 0 17 3 1 #"M"
0 0 17 3 1 #" "
0 0 17 3 3 #"and"
0 0 17 3 1 #" "
0 0 17 3 2 #"bs"
0 0 17 3 1 #" "
0 0 17 3 3 #"are"
0 0 17 3 1 #" "
0 0 17 3 8 #"consumed"
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 1 #" "
0 0 17 3 5 #"state"
0 0 17 3 2 #" F"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 5 #"After"
0 0 17 3 1 #" "
0 0 17 3 9 #"consuming"
0 0 17 3 1 #" "
0 0 17 3 3 #"all"
0 0 17 3 1 #" "
0 0 17 3 8 #"elements"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 5 #"state"
0 0 17 3 1 #" "
0 0 17 3 1 #"F"
0 0 17 3 1 #" "
0 0 17 3 3 #"has"
0 0 17 3 1 #" "
0 0 17 3 6 #"either"
0 0 17 3 1 #" "
0 0 17 3 4 #"less"
0 0 17 3 1 #" "
0 0 17 3 2 #"bs"
0 0 17 3 1 #" "
0 0 17 3 4 #"than"
0 0 17 3 1 #" "
0 0 17 3 2 #"as"
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 1 #" "
0 0 17 3 5 #"state"
0 0 17 3 1 #" "
0 0 17 3 1 #"M"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 2 #"or"
0 0 17 3 1 #" "
0 0 17 3 5 #"state"
0 0 17 3 1 #" "
0 0 17 3 1 #"F"
0 0 17 3 1 #" "
0 0 17 3 3 #"has"
0 0 17 3 1 #" "
0 0 17 3 4 #"more"
0 0 17 3 1 #" "
0 0 17 3 4 #"than"
0 0 17 3 1 #" "
0 0 17 3 5 #"twice"
0 0 17 3 1 #" "
0 0 17 3 2 #"as"
0 0 17 3 1 #" "
0 0 17 3 4 #"many"
0 0 17 3 1 #" "
0 0 17 3 2 #"as"
0 0 17 3 1 #" "
0 0 17 3 2 #"in"
0 0 17 3 1 #" "
0 0 17 3 5 #"state"
0 0 17 3 2 #" M"
0           0 0           0 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 11 #";Question 2"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 33 #";ndfa->ndpda: an-ndfa -> an-ndpda"
0 0 25 29 1 #"\n"
0 0 17 3 46 #";Purpose: to turn the given ndfa into an ndpda"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"ndfa->ndpda"
0 0 25 3 1 #" "
0 0 14 3 7 #"an-ndfa"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 10 #";INVENTORY"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 59
#";(sm-getstates an-ndfa) returns the states of the given dfa"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 63
#";(sm-getalphabet an-ndfa) returns the alphabet of the given dfa"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 63
#";(sm-getstart an-ndfa) returns the start state of the given dfa"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 65
#";(sm-getfinals an-ndfa) returns the final states of the given dfa"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 57 #";(sm-getrules an-ndfa) returns the rules of the given dfa"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"make-ndpda"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 12 #"sm-getstates"
0 0 25 3 1 #" "
0 0 14 3 7 #"an-ndfa"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 14 #"sm-getalphabet"
0 0 25 3 1 #" "
0 0 14 3 7 #"an-ndfa"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"   "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 11 #"sm-getstart"
0 0 25 3 1 #" "
0 0 14 3 7 #"an-ndfa"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 12 #"sm-getfinals"
0 0 25 3 1 #" "
0 0 14 3 7 #"an-ndfa"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 21 #"sm-rules->ndpda-rules"
0 0 25 3 2 #" ("
0 0 14 3 11 #"sm-getrules"
0 0 25 3 1 #" "
0 0 14 3 7 #"an-ndfa"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   )"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  )"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 67
#";sm-rules->ndpda-rules: (listof ndfa rules) -> (listof ndpda rules)"
0 0 25 29 1 #"\n"
0 0 17 3 76
(5
 #";purpose: to convert the given list of ndfa rules into a list of ndp"
 #"da rules"
) 0 0 25 29 1 #"\n"
0 0 17 3 31 #";Always push empty to the stack"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 21 #"sm-rules->ndpda-rules"
0 0 25 3 1 #" "
0 0 14 3 5 #"rules"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 25 3 1 #" "
0 0 14 3 19 #"sm-rule->ndpda-rule"
0 0 25 3 1 #" "
0 0 14 3 5 #"rules"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 43 #";sm-rule->ndpda-rule: ndfarule -> ndpdarule"
0 0 25 29 1 #"\n"
0 0 17 3 57 #";Purpose: to convert a given ndfa rule into an ndpda rule"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 19 #"sm-rule->ndpda-rule"
0 0 25 3 1 #" "
0 0 14 3 4 #"rule"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 10 #";INVENTORY"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 28 #";(car rule) -> current state"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 26 #";(cadr rule) -> next-input"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 27 #";(caddr rule) -> next-state"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 4 #"rule"
0 0 25 3 3 #") ("
0 0 14 3 4 #"cadr"
0 0 25 3 1 #" "
0 0 14 3 4 #"rule"
0 0 25 3 2 #") "
0 0 14 3 3 #"EMP"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 5 #"caddr"
0 0 25 3 1 #" "
0 0 14 3 4 #"rule"
0 0 25 3 2 #") "
0 0 14 3 3 #"EMP"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 40 #";;;;;;;;;;;;;;;TESTS;;;;;;;;;;;;;;;;;;;;"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 12 #"TESTONE-NDFA"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 9 #"make-ndfa"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 3 #"Q-0"
0 0 25 3 1 #" "
0 0 14 3 3 #"Q-1"
0 0 25 3 1 #" "
0 0 14 3 3 #"Q-2"
0 0 25 3 1 #" "
0 0 14 3 3 #"Q-3"
0 0 25 3 1 #" "
0 0 14 3 3 #"Q-4"
0 0 25 3 1 #" "
0 0 14 3 3 #"Q-5"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"             "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"             "
0 0 22 3 1 #"'"
0 0 14 3 3 #"Q-0"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"             "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 3 #"Q-0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"             "
0 0 22 3 1 #"`"
0 0 25 3 2 #"(("
0 0 14 3 3 #"Q-0"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 3 #"Q-1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 3 #"Q-1"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 3 #"Q-2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 3 #"Q-2"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 3 #"Q-3"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 3 #"Q-3"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 3 #"EMP"
0 0 25 3 1 #" "
0 0 14 3 3 #"Q-0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 3 #"Q-0"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 3 #"Q-4"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 3 #"Q-4"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 3 #"Q-5"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 3 #"Q-5"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 3 #"EMP"
0 0 25 3 1 #" "
0 0 14 3 3 #"Q-0"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 12 #"TESTTWO-NDFA"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 9 #"make-ndfa"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 3 #"Q-0"
0 0 25 3 1 #" "
0 0 14 3 3 #"Q-1"
0 0 25 3 1 #" "
0 0 14 3 3 #"Q-2"
0 0 25 3 1 #" "
0 0 14 3 3 #"Q-3"
0 0 25 3 1 #" "
0 0 14 3 3 #"Q-4"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"             "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"             "
0 0 22 3 1 #"'"
0 0 14 3 3 #"Q-0"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"             "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 3 #"Q-0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"             "
0 0 22 3 1 #"`"
0 0 25 3 2 #"(("
0 0 14 3 3 #"Q-0"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 3 #"Q-1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 3 #"Q-1"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 3 #"Q-2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 3 #"Q-2"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 3 #"EMP"
0 0 25 3 1 #" "
0 0 14 3 3 #"Q-0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 3 #"Q-0"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 3 #"Q-3"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 3 #"Q-3"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 3 #"Q-4"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 3 #"Q-4"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 3 #"EMP"
0 0 25 3 1 #" "
0 0 14 3 3 #"Q-0"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 13 #"sm-testequiv?"
0 0 25 3 1 #" "
0 0 14 3 12 #"TESTONE-NDFA"
0 0 25 3 2 #" ("
0 0 14 3 11 #"ndfa->ndpda"
0 0 25 3 1 #" "
0 0 14 3 12 #"TESTONE-NDFA"
0 0 25 3 2 #"))"
0 0 22 3 5 #"#true"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 13 #"sm-testequiv?"
0 0 25 3 1 #" "
0 0 14 3 12 #"TESTTWO-NDFA"
0 0 25 3 2 #" ("
0 0 14 3 11 #"ndfa->ndpda"
0 0 25 3 1 #" "
0 0 14 3 12 #"TESTTWO-NDFA"
0 0 25 3 2 #"))"
0 0 22 3 5 #"#true"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"             "
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 1 #"("
0 0 14 3 19 #"sm-rule->ndpda-rule"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 3 #"Q-5"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 3 #"EMP"
0 0 25 3 1 #" "
0 0 14 3 3 #"Q-0"
0 0 25 3 2 #"))"
0 0 22 3 1 #"'"
0 0 25 3 2 #"(("
0 0 14 3 3 #"Q-5"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 3 #"EMP"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 3 #") ("
0 0 14 3 3 #"Q-0"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 5 #")))  "
0 0 17 3 27 #";;last rule of TESTONE-NDFA"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 1 #"("
0 0 14 3 19 #"sm-rule->ndpda-rule"
0 0 25 3 2 #"  "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 3 #"Q-0"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 3 #"Q-3"
0 0 25 3 2 #"))"
0 0 22 3 1 #"'"
0 0 25 3 2 #"(("
0 0 14 3 3 #"Q-0"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 3 #") ("
0 0 14 3 3 #"Q-3"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 4 #"))) "
0 0 17 3 30 #";; fourth rule of TESTTWO-NDFA"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 21 #"sm-rules->ndpda-rules"
0 0 25 3 2 #"  "
0 0 22 3 1 #"`"
0 0 25 3 2 #"(("
0 0 14 3 3 #"Q-0"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 3 #"Q-1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 3 #"Q-1"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 3 #"Q-2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 3 #"Q-2"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 3 #"Q-3"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 3 #"Q-3"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 3 #"EMP"
0 0 25 3 1 #" "
0 0 14 3 3 #"Q-0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 3 #"Q-0"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 3 #"Q-4"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 3 #"Q-4"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 3 #"Q-5"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 3 #"Q-5"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 3 #"EMP"
0 0 25 3 1 #" "
0 0 14 3 3 #"Q-0"
0 0 25 3 3 #")))"
0 0 22 3 1 #"'"
0 0 25 3 3 #"((("
0 0 14 3 3 #"Q-0"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 3 #") ("
0 0 14 3 3 #"Q-1"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 5 #")) (("
0 0 14 3 3 #"Q-1"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 3 #") ("
0 0 14 3 3 #"Q-2"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 5 #")) (("
0 0 14 3 3 #"Q-2"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 3 #") ("
0 0 14 3 3 #"Q-3"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 5 #")) (("
0 0 14 3 3 #"Q-3"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 3 #") ("
0 0 14 3 3 #"Q-0"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 5 #")) (("
0 0 14 3 3 #"Q-0"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 3 #") ("
0 0 14 3 3 #"Q-4"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 5 #")) (("
0 0 14 3 3 #"Q-4"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 3 #") ("
0 0 14 3 3 #"Q-5"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 5 #")) (("
0 0 14 3 3 #"Q-5"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 3 #") ("
0 0 14 3 3 #"Q-0"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 5 #")))) "
0 0 17 3 39 #";;all translated rules for TESTONE-NDFA"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 21 #"sm-rules->ndpda-rules"
0 0 25 3 1 #" "
0 0 22 3 1 #"`"
0 0 25 3 2 #"(("
0 0 14 3 3 #"Q-0"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 3 #"Q-1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 3 #"Q-1"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 3 #"Q-2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 3 #"Q-2"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 3 #"EMP"
0 0 25 3 1 #" "
0 0 14 3 3 #"Q-0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 3 #"Q-0"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 3 #"Q-3"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 3 #"Q-3"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 3 #"Q-4"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 3 #"Q-4"
0 0 25 3 1 #" "
0 0 29 3 1 #","
0 0 14 3 3 #"EMP"
0 0 25 3 1 #" "
0 0 14 3 3 #"Q-0"
0 0 25 3 3 #")))"
0 0 22 3 1 #"'"
0 0 25 3 3 #"((("
0 0 14 3 3 #"Q-0"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 3 #") ("
0 0 14 3 3 #"Q-1"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 5 #")) (("
0 0 14 3 3 #"Q-1"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 3 #") ("
0 0 14 3 3 #"Q-2"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 5 #")) (("
0 0 14 3 3 #"Q-2"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 3 #") ("
0 0 14 3 3 #"Q-0"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 5 #")) (("
0 0 14 3 3 #"Q-0"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 3 #") ("
0 0 14 3 3 #"Q-3"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 5 #")) (("
0 0 14 3 3 #"Q-3"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 3 #") ("
0 0 14 3 3 #"Q-4"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 5 #")) (("
0 0 14 3 3 #"Q-4"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 3 #") ("
0 0 14 3 3 #"Q-0"
0 0 25 3 1 #" "
0 0 14 3 1 #"e"
0 0 25 3 6 #"))))  "
0 0 17 3 39 #";;all translated rules for TESTTWO-NDFA"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 6 #";PROOF"
0 0 25 29 1 #"\n"
0 9        2119 22           0 0           0 352 0 17 3 7 #";Prove:"
0 0 17 3 1 #" "
0 0 17 3 1 #"L"
0 0 17 3 1 #"("
0 0 17 3 4 #"ndfa"
0 0 17 3 2 #") "
0 0 17 3 2 #"=="
0 0 17 3 1 #" "
0 0 17 3 1 #"L"
0 0 17 3 1 #"("
0 0 17 3 5 #"ndpda"
0 0 17 3 2 #") "
0 0 17 3 5 #"where"
0 0 17 3 1 #" "
0 0 17 3 5 #"ndpda"
0 0 17 3 1 #" "
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 11 #"ndfa->ndpda"
0 0 17 3 1 #" "
0 0 17 3 5 #"ndfa)"
0 0 25 29 1 #"\n"
0 0 17 3 9 #";Theorem:"
0 0 17 3 1 #" "
0 0 17 3 1 #"w"
0 0 17 3 1 #" "
0 0 17 3 3 #"\342\210\210"
0 0 17 3 1 #" "
0 0 17 3 1 #"L"
0 0 17 3 1 #"("
0 0 17 3 4 #"ndfa"
0 0 17 3 2 #") "
0 0 17 3 4 #"<-->"
0 0 17 3 1 #" "
0 0 17 3 1 #"w"
0 0 17 3 1 #" "
0 0 17 3 3 #"\342\210\210"
0 0 17 3 1 #" "
0 0 17 3 1 #"L"
0 0 17 3 1 #"("
0 0 17 3 6 #"ndpda)"
0 0 25 29 1 #"\n"
0 0 17 3 3 #";<-"
0 0 17 3 1 #" "
0 0 17 3 6 #"Assume"
0 0 17 3 1 #" "
0 0 17 3 1 #"w"
0 0 17 3 1 #" "
0 0 17 3 3 #"\342\210\210"
0 0 17 3 1 #" "
0 0 17 3 1 #"L"
0 0 17 3 1 #"("
0 0 17 3 5 #"ndfa)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 4 #"once"
0 0 17 3 1 #" "
0 0 17 3 1 #"w"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 8 #"consumed"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 5 #"stack"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 6 #" empty"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 2 #"by"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 10 #"definition"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 3 #"pda"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 7 #"machine"
0 0 17 3 1 #" "
0 0 17 3 7 #"accepts"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 5 #"given"
0 0 17 3 5 #" word"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 1 #"w"
0 0 17 3 1 #" "
0 0 17 3 3 #"\342\210\210"
0 0 17 3 1 #" "
0 0 17 3 1 #"L"
0 0 17 3 1 #"("
0 0 17 3 6 #"ndpda)"
0 0 25 29 1 #"\n"
0 0 17 3 3 #";->"
0 0 17 3 1 #" "
0 0 17 3 7 #"Assume:"
0 0 17 3 1 #" "
0 0 17 3 1 #"w"
0 0 17 3 1 #" "
0 0 17 3 3 #"\342\210\210"
0 0 17 3 1 #" "
0 0 17 3 1 #"L"
0 0 17 3 1 #"("
0 0 17 3 6 #"ndpda)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 3 #"all"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 5 #"rules"
0 0 17 3 5 #" pass"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 5 #"rules"
0 0 17 3 1 #" "
0 0 17 3 4 #"were"
0 0 17 3 1 #" "
0 0 17 3 5 #"taken"
0 0 17 3 1 #" "
0 0 17 3 4 #"from"
0 0 17 3 1 #" "
0 0 17 3 1 #"L"
0 0 17 3 1 #"("
0 0 17 3 5 #"ndfa)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 1 #"w"
0 0 17 3 1 #" "
0 0 17 3 3 #"\342\210\210"
0 0 17 3 1 #" "
0 0 17 3 1 #"L"
0 0 17 3 1 #"("
0 0 17 3 5 #"ndfa)"
0 0 25 29 1 #"\n"
0 0 17 3 9 #";Theorem:"
0 0 17 3 1 #" "
0 0 17 3 1 #"w"
0 0 17 3 1 #" "
0 0 17 3 3 #"\342\210\211"
0 0 17 3 1 #" "
0 0 17 3 1 #"L"
0 0 17 3 1 #"("
0 0 17 3 4 #"ndfa"
0 0 17 3 2 #") "
0 0 17 3 4 #"<-->"
0 0 17 3 1 #" "
0 0 17 3 1 #"w"
0 0 17 3 1 #" "
0 0 17 3 3 #"\342\210\211"
0 0 17 3 1 #" "
0 0 17 3 1 #"L"
0 0 17 3 1 #"("
0 0 17 3 6 #"ndpda)"
0 0 25 29 1 #"\n"
0 0 17 3 3 #";<-"
0 0 17 3 1 #" "
0 0 17 3 6 #"Assume"
0 0 17 3 1 #" "
0 0 17 3 1 #"w"
0 0 17 3 1 #" "
0 0 17 3 3 #"\342\210\211"
0 0 17 3 1 #" "
0 0 17 3 1 #"L"
0 0 17 3 1 #"("
0 0 17 3 5 #"ndfa)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 5 #"while"
0 0 17 3 1 #" "
0 0 17 3 9 #"consuming"
0 0 17 3 1 #" "
0 0 17 3 1 #"w"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 3 #"one"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 5 #"rules"
0 0 17 3 1 #" "
0 0 17 3 5 #"taken"
0 0 17 3 1 #" "
0 0 17 3 4 #"from"
0 0 17 3 1 #" "
0 0 17 3 1 #"L"
0 0 17 3 1 #"("
0 0 17 3 4 #"ndfa"
0 0 17 3 2 #") "
0 0 17 3 3 #"did"
0 0 17 3 1 #" "
0 0 17 3 3 #"not"
0 0 17 3 1 #" "
0 0 17 3 4 #"pass"
0 0 17 3 1 #" "
0 0 17 3 2 #"so"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 7 #"machine"
0 0 17 3 1 #" "
0 0 17 3 7 #"rejects"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 5 #" word"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 1 #"w"
0 0 17 3 1 #" "
0 0 17 3 3 #"\342\210\211"
0 0 17 3 1 #" "
0 0 17 3 1 #"L"
0 0 17 3 1 #"("
0 0 17 3 6 #"ndpda)"
0 0 25 29 1 #"\n"
0 0 17 3 3 #";->"
0 0 17 3 1 #" "
0 0 17 3 7 #"Assume:"
0 0 17 3 1 #" "
0 0 17 3 1 #"w"
0 0 17 3 1 #" "
0 0 17 3 3 #"\342\210\211"
0 0 17 3 1 #" "
0 0 17 3 1 #"L"
0 0 17 3 1 #"("
0 0 17 3 6 #"ndpda)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 2 #"at"
0 0 17 3 1 #" "
0 0 17 3 5 #"least"
0 0 17 3 1 #" "
0 0 17 3 3 #"one"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 5 #"rules"
0 0 17 3 1 #" "
0 0 17 3 4 #"does"
0 0 17 3 1 #" "
0 0 17 3 3 #"not"
0 0 17 3 5 #" pass"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 5 #"rules"
0 0 17 3 1 #" "
0 0 17 3 4 #"were"
0 0 17 3 1 #" "
0 0 17 3 5 #"taken"
0 0 17 3 1 #" "
0 0 17 3 4 #"from"
0 0 17 3 1 #" "
0 0 17 3 1 #"L"
0 0 17 3 1 #"("
0 0 17 3 5 #"ndfa)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 1 17 65 1 #"\t"
0 0 17 3 2 #"->"
0 0 17 3 1 #" "
0 0 17 3 1 #"w"
0 0 17 3 1 #" "
0 0 17 3 3 #"\342\210\211"
0 0 17 3 1 #" "
0 0 17 3 1 #"L"
0 0 17 3 1 #"("
0 0 17 3 5 #"ndfa)"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 3 #"The"
0 0 17 3 1 #" "
0 0 17 3 5 #"above"
0 0 17 3 1 #" "
0 0 17 3 8 #"theorems"
0 0 17 3 1 #" "
0 0 17 3 4 #"show"
0 0 17 3 1 #" "
0 0 17 3 4 #"that"
0 0 17 3 1 #" "
0 0 17 3 1 #"L"
0 0 17 3 1 #"("
0 0 17 3 4 #"ndfa"
0 0 17 3 2 #") "
0 0 17 3 2 #"=="
0 0 17 3 1 #" "
0 0 17 3 1 #"L"
0 0 17 3 1 #"("
0 0 17 3 5 #"ndpda"
0 0 17 3 2 #") "
0 0 17 3 5 #"where"
0 0 17 3 1 #" "
0 0 17 3 5 #"ndpda"
0 0 17 3 1 #" "
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 11 #"ndfa->ndpda"
0 0 17 3 1 #" "
0 0 17 3 5 #"ndfa)"
0           0 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 4 #"test"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0           0
